%h2= t('.title')
.row
  = search_form_for @search, url: admin_pictures_path, html: { class: 'col s12', method: :get } do |f|
    .row
      .input-field.col.s3
        = f.text_field :title_cont
        = f.label :title_cont, t('activerecord.attributes.picture.title')
      .input-field.col.s3
        = f.text_field :alt_text_cont
        = f.label :alt_text_cont, t('activerecord.attributes.picture.alt_text')
      .input-field.col.s3
        = f.text_field :caption_cont
        = f.label :caption_cont, t('activerecord.attributes.picture.caption')
      .input-field.col.s3
        = f.button content_tag(:i, 'search', class: 'material-icons'), class: 'btn btn-flat waves-effect waves-light yellow darken-3'
        = link_to content_tag(:i, 'clear', class: 'material-icons'), admin_pictures_path, class: 'btn btn-flat waves-effect waves-loght red darken-3'
- if policy([:admin, Picture]).create?
  .row
    .image-uploader-container.col.s12
.picture-list-container{ 'data-pictures' => @pictures.map { |picture| PictureSerializer.new(picture).as_json }.to_json }
= paginate @pictures
- unless @pictures.present?
  %p.no-items= t('.no_pictures')
